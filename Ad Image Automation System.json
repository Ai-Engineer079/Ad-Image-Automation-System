{
  "name": "Ad image automation",
  "nodes": [
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        208,
        496
      ],
      "id": "eca98733-2903-4fbc-897d-abd071ef123d",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "PeMlZrUYL1NweRGD",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Your task: Create an image prompt as guided by your system guidelines.\n\nMake sure that the reference image is depicted as ACCURATELY as possible in the resulting images, especially all text.\n\n\nThese are the user's description:\n{{ $json.chatInput }}\n\n\n\n",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=ROLE: Ad Prompt Builder\n\nPurpose: Given an image URL or product info, write one short, natural description for an AI image/video generator to use in an ad.\n\nDefaults:\n\nIf vague, place product with a person in a fitting everyday setting.\nIf style not given, use casual realism suitable for ads.\n\nRealism:\n\nLook authentic and relatable.\nSlight imperfections: off-center framing, natural light, light motion blur, mild grain.\nKeep packaging text exactly as shown. No invented claims.\n\nCamera Cues (use ≥2):\nphone snapshot, handheld framing, off-center composition, natural indoor light, soft shadows, slight motion blur, auto exposure, unpolished look, mild grain.\n\n\nOutput:\nReturn only one JSON object:\n{ \"image_prompt\": \"one string (≤120 words) covering subject, action, mood, setting, style/camera, colors, and text-accuracy\" }\n\nDiversity:\n\nIf not specified, vary gender/ethnicity naturally.\nDefault age: 21–38.\nPrefer real-world spaces.\n\nGood Example:\n\n{ \"image_prompt\": \"young professional holding a reusable water bottle while walking to work; action: sipping casually; mood: energetic morning; setting: busy city street; style/camera: phone snapshot, handheld framing, off-center composition, natural light, slight motion blur; colors: bright blue bottle stands out; text accuracy: keep logo exactly as visible\" }"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        288,
        288
      ],
      "id": "51a11ddb-c7ef-4958-9e1a-a65d89d077e1",
      "name": "Image Prompt Generator"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n\t\"image_prompt\": \"string\"\n}",
        "autoFix": true
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        416,
        512
      ],
      "id": "c17c0129-1355-430b-9e31-8e092efc5134",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "base",
        "options": {}
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        976,
        288
      ],
      "id": "a324f223-7ee7-4217-9fc5-086b74f749ee",
      "name": "Convert to File1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://openrouter.ai/api/v1/chat/completions",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "openRouterApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"model\": \"google/gemini-2.0-flash-exp:free\",\n  \"modalities\": [ \"text\"],\n  \"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": [\n        {\n          \"type\": \"text\",\n          \"text\": \"{{ $json.output.image_prompt.replace(/\\\"/g, '\\\\\\\"').replace(/\\n/g, '\\\\n') }}\"\n        }\n      ]\n    }\n  ]\n}\n\n",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        640,
        288
      ],
      "id": "bffebc09-a53a-4292-a42f-95ed953e8b2b",
      "name": "HTTP Request",
      "credentials": {
        "openRouterApi": {
          "id": "T6hWx2reDkF17EP5",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0d3e1ea2-9386-47bf-8f8a-cce7f349dbe5",
              "name": "=data",
              "value": "={{$json[\"choices\"][0][\"message\"][\"images\"][0][\"image_url\"][\"url\"]}}",
              "type": "string"
            },
            {
              "id": "393caf3e-e367-4490-8ee3-28bfc83318b1",
              "name": "=base",
              "value": "={{$json[\"choices\"][0][\"message\"][\"images\"][0][\"image_url\"][\"url\"].split(\",\")[1]}}",
              "type": "string"
            },
            {
              "id": "f827ebfd-c7d3-48f1-8589-74965070f910",
              "name": "mime",
              "value": "={{$json[\"choices\"][0][\"message\"][\"images\"][0][\"image_url\"][\"url\"].match(/^data:([^;]+)/)[1]}}",
              "type": "string"
            },
            {
              "id": "7de58815-fa11-46ba-acb4-eb4563120218",
              "name": "fileName",
              "value": ".png",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        816,
        288
      ],
      "id": "509c4cb3-6e82-4116-8e14-0dc74ec03eb9",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "content": "# Upload Image & Description",
        "height": 428,
        "width": 696,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -592,
        176
      ],
      "id": "f0fbac35-4dde-4b44-843a-abdb7cc457a6",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "# Get New/Edited Image from NanoBanana via OpenRouter",
        "height": 448,
        "width": 1008,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        192,
        176
      ],
      "id": "e1739d97-eb89-49f4-bea2-5ea8602115e6",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "## Ad-Image Ready NanoBanana Workflow\n#(AI Automation/Agent Specialist)",
        "height": 120,
        "width": 560
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        48,
        16
      ],
      "typeVersion": 1,
      "id": "495ce774-0e3a-42ad-bd29-9f43757f44a4",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "public": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.3,
      "position": [
        -368,
        352
      ],
      "id": "5211f3a4-24d5-4eda-a314-fcd126c48162",
      "name": "When chat message received",
      "webhookId": "47a4bdae-016d-49d3-9fec-655ef1ffe8ff"
    }
  ],
  "pinData": {},
  "connections": {
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Image Prompt Generator",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Structured Output Parser",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Image Prompt Generator": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Image Prompt Generator",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Convert to File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "Image Prompt Generator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "a7944fb5-4b8c-40ab-a8fd-8c4ae5fceb71",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "214396eb6f622509edb879d9f4065e3c733f10e57c7ba01738b7316c03eb03d8"
  },
  "id": "v4KWzUAiOZS0dmWG",
  "tags": []
}